"use strict";(self.webpackChunkpipeline_ui_website=self.webpackChunkpipeline_ui_website||[]).push([[6868],{65825:function(e,t,a){a.r(t),a.d(t,{assets:function(){return s},contentTitle:function(){return p},default:function(){return h},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return d}});var n=a(87462),i=a(63366),o=(a(67294),a(3905)),r=["components"],l={},p="Overview",c={unversionedId:"Reach Contracts Lab/about",id:"Reach Contracts Lab/about",title:"Overview",description:"The Pipeline Reach Lab is an online tool to experiment with deploying and using TEAL (Transaction Execution Approval Lanuage) smart contracts that have been created with the Reach language.",source:"@site/docs/Reach Contracts Lab/about.mdx",sourceDirName:"Reach Contracts Lab",slug:"/Reach Contracts Lab/about",permalink:"/docs/Reach Contracts Lab/about",draft:!1,editUrl:"https://github.com/headline-design/pipeline-ui/blob/main/design-site/docs/Reach Contracts Lab/about.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Video",permalink:"/docs/PIPELINE Express/video"},next:{title:"Demo",permalink:"/docs/Reach Contracts Lab/demo"}},s={},d=[{value:"Get started",id:"get-started",level:2},{value:"Morra Game",id:"morra-game",level:2},{value:"Adapting Reach Code",id:"adapting-reach-code",level:2}],m={toc:d};function h(e){var t=e.components,a=(0,i.Z)(e,r);return(0,o.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"overview"},"Overview"),(0,o.kt)("p",null,"The Pipeline Reach Lab is an online tool to experiment with deploying and using TEAL (Transaction Execution Approval Lanuage) smart contracts that have been created with the Reach language."),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Check out the ",(0,o.kt)("a",{parentName:"p",href:"../Videos"},"VIDEO")," to see it in action!"))),(0,o.kt)("h2",{id:"get-started"},"Get started"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u2022 Select your net (for security reasons, the demo only allows the selection of testnet. You can enable mainnet by forking our github repository and adding MainNet to the network ",(0,o.kt)("inlineCode",{parentName:"p"},"<Select>")," element)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u2022 Navigate to your MyAlgo wallet and set your wallet to testnet using their dropdown menu.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u2022 Fund your wallet via the link provided in the Demo")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u2022 Select either a Reach or TEAL contract using demo's the dropdown menus. "))),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"The demo's ",(0,o.kt)("inlineCode",{parentName:"p"},"log"),' window will only log messages provided by the Reach "frontend" code or transaction id\'s for TEAL-only deploys. We recommend that at this point the user open their browser console log by right-clicking on the screen, hitting ',(0,o.kt)("inlineCode",{parentName:"p"},"inspect")," and selecting the ",(0,o.kt)("inlineCode",{parentName:"p"},"console")," option."))),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u2022 For all Reach contracts (except ",(0,o.kt)("inlineCode",{parentName:"p"},"Morra Game"),"), clicking ",(0,o.kt)("inlineCode",{parentName:"p"},"Deploy and Run Reach"),' will both deploy the smart contract and run the frontend and "backend" code associated with the Reach example, using your own connected addess to run the code for all participants.')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u2022 A key feature of our implementation of the ",(0,o.kt)("inlineCode",{parentName:"p"},"Morra Game")," is to demonstrate how Reach code can be utilized without any RPC servers or backends needed. Identical code exists on all client machines and runs entirely client-side (with the exception of the smart contract), with participants merely inputing the app id of the Morra Game smart contract. ")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u2022 The Morra Game must be played with two seperate addresses (documented below)"))),(0,o.kt)("h2",{id:"morra-game"},"Morra Game"),(0,o.kt)("p",null,"Selecting the ",(0,o.kt)("inlineCode",{parentName:"p"},"Reach Morra Game")," will display a dropdown to select a role and an input for an app id."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u2022 To run the game, 2 users load the demo on seperate machines and connect their seperate accounts. The user who will deploy the contract and act as participant ",(0,o.kt)("inlineCode",{parentName:"p"},"Alice")," selects the ",(0,o.kt)("inlineCode",{parentName:"p"},"Deployer & Participant")," role and clicks ",(0,o.kt)("inlineCode",{parentName:"p"},"Deploy & Run Reach"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u2022 Immediately after deploying the contract, ",(0,o.kt)("inlineCode",{parentName:"p"},"Alice")," must locate the app id on AlgoExplorer and share it with user ",(0,o.kt)("inlineCode",{parentName:"p"},"Bob"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u2022 User ",(0,o.kt)("inlineCode",{parentName:"p"},"Bob")," inputs the app id, selects the ",(0,o.kt)("inlineCode",{parentName:"p"},"Participant")," role and clicks ",(0,o.kt)("inlineCode",{parentName:"p"},"Deploy & Run Reach"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u2022 At this point, the Reach code automatically generates the bets and guesses for both participants, only requiring that the transactions be signed in the MyAlgo popup windows.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u2022 If the smart contract obverves a winner, the winner will receive the amount wagered by the loser.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u2022 In the event of either a winner or timeout, the Reach code will automatically prompt user ",(0,o.kt)("inlineCode",{parentName:"p"},"Alice")," to delete the app."))),(0,o.kt)("h2",{id:"adapting-reach-code"},"Adapting Reach Code"),(0,o.kt)("p",null,"The code examples provided in the ReachLang github examples folder can be utilized in serverless online apps via the following process: "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u2022 Clone the repo and compile the Reach code following the instructions provided on the Reach doc site")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},'\u2022 Copy the "backend" code from the created ',(0,o.kt)("inlineCode",{parentName:"p"},"build")," folder and import it into your main JavaScript or React file (app.js or index.js)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},'\u2022 Copy the "frontend" code (index.mjs from parent folder) and paste or import it into your main file. ')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u2022 replace the following line wherever it occurs with a variable that contains an Algorand address as string:"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"await stdlib.newTestAccount(startingBalance);\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u2022 Locate the code that begins at: ")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"await Promise.all([\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u2022 Copy this entire block and rewrite it to conditionaly run only the segment corresponding to the role that the client selects. ")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u2022 Replace the ",(0,o.kt)("inlineCode",{parentName:"p"},"getInfo()")," function call with ",(0,o.kt)("inlineCode",{parentName:"p"},"parseInt(appId)")," and set ",(0,o.kt)("inlineCode",{parentName:"p"},"appId")," to the id of the smart contract")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u2022 Replace ",(0,o.kt)("inlineCode",{parentName:"p"},"ldstdlib")," call with:"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"const stdlib = loadStdlib('ALGO')`\n")),(0,o.kt)("p",null,"Finally, the following code must be run before the Reach frontend code:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"stdlib.setWalletFallback(stdlib.walletFallback({\n    providerEnv: net, MyAlgoConnect\n}));\n\nstdlib.getDefaultAccount().then(\n    response => {\n        acct = response.networkAccount.addr;\n    }\n)\n")))}h.isMDXComponent=!0}}]);