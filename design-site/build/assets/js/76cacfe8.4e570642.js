"use strict";(self.webpackChunkpipeline_ui_website=self.webpackChunkpipeline_ui_website||[]).push([[3605],{58882:function(n,e,t){t.r(e),t.d(e,{frontMatter:function(){return p},contentTitle:function(){return r},metadata:function(){return d},toc:function(){return u},default:function(){return m}});var o=t(87462),l=t(63366),a=(t(67294),t(3905)),i=t(55182),s=["components"],p={},r="Modal",d={unversionedId:"Components/Modal",id:"Components/Modal",title:"Modal",description:"The Modal component displays any content fixed positioned in the screen centre with a background colour and can be used to generate popup windwos.",source:"@site/docs/Components/Modal.mdx",sourceDirName:"Components",slug:"/Components/Modal",permalink:"/docs/Components/Modal",editUrl:"https://github.com/headline-design/pipeline-ui/blob/main/design-site/docs/Components/Modal.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Loader",permalink:"/docs/Components/Loader"},next:{title:"Pill",permalink:"/docs/Components/Pill"}},u=[{value:"Usage Example",id:"usage-example",children:[{value:"Props",id:"props",children:[],level:3}],level:2}],c={toc:u};function m(n){var e=n.components,t=(0,l.Z)(n,s);return(0,a.kt)("wrapper",(0,o.Z)({},c,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"modal"},"Modal"),(0,a.kt)("p",null,"The Modal component displays any content fixed positioned in the screen centre with a background colour and can be used to generate popup windwos."),(0,a.kt)("h2",{id:"usage-example"},"Usage Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'function ModalExample() {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const closeModal = e => {\n    e.preventDefault();\n    setIsOpen(false);\n  };\n\n  const openModal = e => {\n    e.preventDefault();\n    setIsOpen(true);\n  };\n\n  return (\n    <Box className="App" p={4}>\n      <Box>\n        <Button onClick={openModal}>Open Modal</Button>\n\n        <Modal isOpen={isOpen}>\n          <Card width={"420px"} p={0}>\n            <Button.Text\n              icononly\n              icon={"Close"}\n              color={"moon-gray"}\n              position={"absolute"}\n              top={0}\n              right={0}\n              mt={3}\n              mr={3}\n              onClick={closeModal}\n            />\n\n            <Box p={4} mb={3}>\n              <Heading.h3>Confirm Action</Heading.h3>\n              <Text>Are you sure you want to do something?</Text>\n            </Box>\n\n            <Flex\n              px={4}\n              py={3}\n              borderTop={1}\n              borderColor={"#E8E8E8"}\n              justifyContent={"flex-end"}\n            >\n              <Button.Outline onClick={closeModal}>Cancel</Button.Outline>\n              <Button ml={3}>Confirm</Button>\n            </Flex>\n          </Card>\n        </Modal>\n      </Box>\n    </Box>\n  );\n}\n')),(0,a.kt)("h3",{id:"props"},"Props"),(0,a.kt)(i.Z,{mdxType:"Table"},(0,a.kt)("thead",null,(0,a.kt)("tr",null,(0,a.kt)("th",null,"Prop"),(0,a.kt)("th",null,"Type"),(0,a.kt)("th",null,"Default"),(0,a.kt)("th",null,"Description"))),(0,a.kt)("tbody",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,"isOpen"),(0,a.kt)("td",null,"bool (optional)"),(0,a.kt)("td",null,"false"),(0,a.kt)("td",null,"Shows the content of the Modal when true.")))))}m.isMDXComponent=!0}}]);