"use strict";(self.webpackChunkpipeline_ui_website=self.webpackChunkpipeline_ui_website||[]).push([[1576],{37597:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return a},default:function(){return u},frontMatter:function(){return r},metadata:function(){return c},toc:function(){return l}});var o=t(87462),s=t(63366),i=(t(67294),t(3905)),m=["components"],r={},a="Theme",c={unversionedId:"Components/Theme",id:"Components/Theme",title:"Theme",description:"Pipeline Components come with built-in access to the default Pipeline theme. The theme file contains an object which holds values for common variables such as color, fonts, box shadows, and more.",source:"@site/docs/Components/Theme.mdx",sourceDirName:"Components",slug:"/Components/Theme",permalink:"/docs/Components/Theme",draft:!1,editUrl:"https://github.com/headline-design/pipeline-ui/blob/main/design-site/docs/Components/Theme.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Textarea",permalink:"/docs/Components/Textarea"},next:{title:"ToastMessage",permalink:"/docs/Components/ToastMessage"}},p={},l=[{value:"Strategies",id:"strategies",level:2}],h={toc:l};function u(e){var n=e.components,t=(0,s.Z)(e,m);return(0,i.kt)("wrapper",(0,o.Z)({},h,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"theme"},"Theme"),(0,i.kt)("p",null,"Pipeline Components come with built-in access to the default Pipeline theme. The theme file contains an object which holds values for common variables such as color, fonts, box shadows, and more."),(0,i.kt)("h2",{id:"strategies"},"Strategies"),(0,i.kt)("p",null,"You can override the entire theme for an entire tree of components using the ThemeProvider from styled-components:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import {Box, Button, Text, theme} from 'pipeline-ui'\nimport {ThemeProvider} from 'styled-components'\n// a theme with custom spacing and font sizes\nconst customTheme = {\n  ...theme,\n  space: [0, 8, 16, 32, 64],\n  fontSizes: [10, 12, 16, 24, 48]\n}\n// override\ncustomTheme.colors.black = '#111'\nexport default () => (\n  <ThemeProvider theme={customTheme}>\n    <Box color='black' p={4}>\n      <Text fontSize={4}>Hello, world!</Text>\n    </Box>\n  </ThemeProvider>\n)\n")),(0,i.kt)("p",null,"Option B: You can merge the pipeline theme with your custom theme using Object.assign:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import {theme} from 'pipeline-ui';\nimport { ThemeProvider } from 'styled-components';\nconst customTheme = {\n  space: [0, 8, 16, 32, 64],\n  fontSizes: [10, 12, 16, 24, 48],\n  colors: {\n    ...theme.colors,\n    black: '#111'\n  }\n};\nconst App = (props) => {\n  return (\n    <div>\n      <ThemeProvider theme={Object.assign({}, theme, customTheme)}> // matching keys in customTheme will override keys in the pipeline theme\n        <App />\n      </ThemeProvider>\n    </div>\n  )\n}\n")),(0,i.kt)("p",null,"Option 3: You can theme individual components by passing the theme prop directly:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import {Text} from 'pipeline-ui'\nconst customTheme = {\n  colors: {\n    magenta: '#f0f'\n  }\n}\nexport default () => (\n  <Text theme={customTheme} color='magenta'>Hi, I'm magenta!</Text>\n)\n")))}u.isMDXComponent=!0}}]);